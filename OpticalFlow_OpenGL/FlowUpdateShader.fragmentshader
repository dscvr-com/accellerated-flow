// shadertype=glsl
#version 330 core

precision highp float;

in vec2 UV;

uniform sampler2D srcA;
uniform sampler2D srcB;

uniform float mul;

out vec2 color;

void main() {
    vec4 pointA = texture(srcA, UV);
    vec4 pointB = texture(srcB, UV);

    float g11 = pointA.x * mul;
    float g12 = pointA.y * mul;
    float g22 = pointA.z * mul;
    float h1 = pointB.x * mul;
    float h2 = pointB.y * mul;

    float idet = 1./(g11*g22 - g12*g12 + 1e-3);

    float x = (g11*h2-g12*h1) * idet;
    float y = (g22*h1 - g12*h2) * idet;

    color = vec2(x, y);
		
	//if (g11*g22 - g12*g12 < 1e-10) {
	//	color = vec2(0, 1);
	//	return;
	//}

	//if (isnan(idet)) {
	//	color = vec2(1, 0);
	//	return;
	//}

	//if (isinf(idet)) {
	//	color = vec2(1, 1);
	//}
}